import{Controller as e}from"@hotwired/stimulus";class i extends e{connect(){this.lazyValue?this.lazyAnimate():this.animate()}animate(){let e=null;const t=a=>{e||(e=a);const n=a-e,r=Math.min(n/this.durationValue,1);this.element.innerHTML=Math.floor(r*(this.endValue-this.startValue)+this.startValue).toString(),r<1&&window.requestAnimationFrame(t)};window.requestAnimationFrame(t)}lazyAnimate(){new IntersectionObserver(((e,a)=>{e.forEach((e=>{e.isIntersecting&&(this.animate(),a.unobserve(e.target))}))}),this.lazyAnimateOptions).observe(this.element)}get lazyAnimateOptions(){return{threshold:this.lazyThresholdValue,rootMargin:this.lazyRootMarginValue}}}i.values={start:Number,end:Number,duration:Number,lazyThreshold:Number,lazyRootMargin:{type:String,default:"0px"},lazy:Boolean};export{i as default};

